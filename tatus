[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 4c8163c..deb20c3 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -2,4 +2,4 @@[m
 .Rhistory[m
 .RData[m
 .Ruserdata[m
[31m-/Data/[m
[32m+[m[32m/data/[m
[1mdiff --git a/src/data/clean_rushes.py b/src/data/clean_rushes.py[m
[1mindex 5521f44..8d0d1ac 100644[m
[1m--- a/src/data/clean_rushes.py[m
[1m+++ b/src/data/clean_rushes.py[m
[36m@@ -2,8 +2,7 @@[m [mimport pandas as pd[m
 import numpy as np[m
 import os[m
 [m
[31m-[m
[31m-data_dir = 'C:/Users/mworley/nflbdb/Data/'[m
[32m+[m[32mdata_dir = 'C:/Users/mworley/nfl_tracking/data/'[m
 df = pd.read_csv(data_dir + 'interim/rushes.csv', index_col=0)[m
 games = pd.read_csv(data_dir + 'raw/games.csv')[m
 [m
[36m@@ -29,11 +28,14 @@[m [mdf['handoff_frame'] = np.where(df['handoff'] == 1, df['frame.id'], np.nan)[m
 df['end_frame'] = np.where(df['end'] == 1, df['frame.id'], np.nan)[m
 [m
 # within game play, get first frame of each event type[m
[31m-# transform to add to all forw for each play[m
[32m+[m[32m# transform to add to all rows for each play[m
 df['play_snap_frame'] = df.groupby(['gameId', 'playId'])['snap_frame'].transform('min')[m
 df['play_handoff_frame'] = df.groupby(['gameId', 'playId'])['handoff_frame'].transform('min')[m
 df['play_end_frame'] = df.groupby(['gameId', 'playId'])['end_frame'].transform('min')[m
 [m
[32m+[m[32m# drop single-row indicators[m
[32m+[m[32mdf = df.drop(columns=['snap_frame', 'handoff_frame', 'end_frame'])[m
[32m+[m
 # drop frames before snap and after end[m
 df = df[df['frame.id'] >= df['play_snap_frame']][m
 df = df[df['frame.id'] <= df['play_end_frame']][m
[36m@@ -83,21 +85,45 @@[m [mdef standard_direction(row, col, mval):[m
             x = row[col][m
     return x[m
 [m
[31m-df['x_std'] = df.apply(lambda x: standard_direction(x, 'x', 120), axis=1)[m
[32m+[m[32mdf['xu'] = df.apply(lambda x: standard_direction(x, 'x', 120), axis=1)[m
 [m
 # set min and max of y[m
 df['y'] = np.where(df['y'] < 0, 0, df['y'])[m
 df['y'] = np.where(df['y'] > 53.3, 53.3, df['y'])[m
 [m
 # create standard direction y column[m
[31m-df['y_std'] = df.apply(lambda x: standard_direction(x, 'y', 53.3), axis=1)[m
[32m+[m[32mdf['yu'] = df.apply(lambda x: standard_direction(x, 'y', 53.3), axis=1)[m
 [m
 # x of previous row[m
[31m-df['x_std_lag'] = df.groupby(['displayName', 'gameId', 'playId'])['x_std'].apply(lambda y: y.shift(1))[m
[31m-df['x_std_ch'] = df['x_std'] - df['x_std_lag'][m
[31m-[m
[31m-[m
[31m-df.head()[m
[31m-[m
[31m-# save temporary file[m
[31m-df.to_csv(data_dir + 'interim/rushes_std.csv')[m
[32m+[m[32mgroup = ['displayName', 'gameId', 'playId'][m
[32m+[m[32mshift = lambda x: x.shift(1)[m
[32m+[m
[32m+[m[32mdf['xu_lag'] = df.groupby(group)['xu'].apply(shift)[m
[32m+[m[32mdf['xu_ch'] = df['xu'] - df['xu'][m
[32m+[m
[32m+[m[32m# y of previous row[m
[32m+[m[32mdf['yu_lag'] = df.groupby(group)['yu'].apply(shift)[m
[32m+[m[32mdf['yu_ch'] = df['yu'] - df['yu_lag'][m
[32m+[m
[32m+[m[32m# function to get a play_level value and transform across all play rows[m
[32m+[m[32mdef transform_play_value(data, event, var, new_var):[m
[32m+[m[32m    c = data.loc[data[event] == 1, ['gameId', 'playId', var]][m
[32m+[m[32m    c = c.rename(columns={var: new_var})[m
[32m+[m[32m    new_data = pd.merge(data, c, on=['gameId', 'playId'], how='inner')[m
[32m+[m[32m    return new_data[m
[32m+[m
[32m+[m[32mdf = transform_play_value(df, 'snap', 'xu', 'x_snap')[m
[32m+[m[32mdf = transform_play_value(df, 'snap', 'yu', 'y_snap')[m
[32m+[m[32mdf['xufs'] = df['xu'] - df['x_snap'][m
[32m+[m[32mdf['yufs'] = df['yu'] - df['y_snap'][m
[32m+[m
[32m+[m[32m# xu_fs of previous row[m
[32m+[m[32mdf['xufs_lag'] = df.groupby(group)['xufs'].apply(shift)[m
[32m+[m[32mdf['xufs_ch'] = df['xufs'] - df['xufs_lag'][m
[32m+[m
[32m+[m[32m# yu_fs of previous row[m
[32m+[m[32mdf['yufs_lag'] = df.groupby(group)['yufs'].apply(shift)[m
[32m+[m[32mdf['yufs_ch'] = df['yufs'] - df['yufs_lag'][m
[32m+[m
[32m+[m[32m# save file[m
[32m+[m[32mdf.to_csv(data_dir + 'interim/rushes_clean.csv')[m
[1mdiff --git a/src/data/explore_rushes.py b/src/data/explore_rushes.py[m
[1mindex 8c2cbc6..f634a6d 100644[m
[1m--- a/src/data/explore_rushes.py[m
[1m+++ b/src/data/explore_rushes.py[m
[36m@@ -9,15 +9,38 @@[m [mimport os[m
 plt.style.use('ggplot')[m
 [m
 # import data[m
[31m-data_dir = 'C:/Users/mworley/nflbdb/Data/'[m
[31m-df = pd.read_csv(data_dir + 'interim/rushes_std.csv', index_col=0)[m
[32m+[m[32mdata_dir = 'C:/Users/mworley/nfl_tracking/data/'[m
[32m+[m[32mdf = pd.read_csv(data_dir + 'interim/rushes_clean.csv', index_col=0)[m
[32m+[m[32mdf.head()[m
 [m
[31m-# plot all runs[m
[31m-dfsub = df.loc[:, ['displayName', 'gameId', 'playId', 'x_std', 'y_std']][m
[31m-dfsub.set_index('x_std', inplace=True)[m
[31m-dfsub.groupby(['displayName', 'gameId', 'playId'])['y_std'].plot()[m
[32m+[m[32m# %%[m
[32m+[m[32m# subset data[m
[32m+[m[32mdfsub = df.loc[:, ['displayName', 'quarter', 'event', 'frame.id', 'gameId', 'playId', 'xufs', 'yu']][m
[32m+[m[32mdfsub = dfsub[dfsub['displayName'] == "Dalvin Cook"][m
[32m+[m[32m#dfsub.set_index('xufs', inplace=True)[m
[32m+[m
[32m+[m[32mdfsub['xufs_min'] = dfsub.groupby(['playId'])['xufs'].transform('min')[m
[32m+[m[32mdfsub = dfsub[dfsub['event'] == 'ball_snap'][m
[32m+[m[32mdfsub.sort_values(['xufs_min', 'playId', 'frame.id'], inplace=True)[m
[32m+[m[32mdfsub.head(20)[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m# %%plot all runs[m
[32m+[m[32mdfsub.groupby(['gameId', 'playId'])['yu'].plot()[m
 plt.show()[m
 [m
[32m+[m[32m# %%[m
[32m+[m[32m#chk = df[df['gameId'] == 2017091100][m
[32m+[m[32mchk = df.loc[:, ['displayName', 'quarter', 'event', 'frame.id', 'x',[m
[32m+[m[32m                  'playId', 'xufs', 'yu', 'x_ball', 'x_snap', 'x_ball_cmid', 'homedir']][m
[32m+[m
[32m+[m[32mchk['xufs_min'] = chk.groupby(['playId'])['xufs'].transform('min')[m
[32m+[m[32mchk = chk[chk['event'] == 'ball_snap'][m
[32m+[m[32mchk.sort_values(['xufs_min', 'playId', 'frame.id'], inplace=True)[m
[32m+[m[32mchk.head(40)[m
[32m+[m
 [m
 # %%[m
 fig, ax = plt.subplots(figsize=(8,6))[m
[1mdiff --git a/src/data/get_rushes.py b/src/data/get_rushes.py[m
[1mindex d9a4fae..6b05164 100644[m
[1m--- a/src/data/get_rushes.py[m
[1m+++ b/src/data/get_rushes.py[m
[36m@@ -1,6 +1,6 @@[m
 import pandas as pd[m
 import os[m
[31m-os.chdir('C:/Users/mworley/nflbdb/Data/')[m
[32m+[m[32mos.chdir('C:/Users/mworley/nfl_tracking/data/')[m
 [m
 def get_rushes(file):[m
 [m
